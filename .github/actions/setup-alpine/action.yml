# Copyright (c) 2023 [Ribose Inc](https://www.ribose.com).
# All rights reserved.
# This file is a part of tamatebako
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

name: 'Setup Ubuntu'
description: 'Setup Ubuntu ci environment for tebako'
inputs:
  cache:
    description: 'Tebako cache mode: build/use'
    required: true
    type: string
runs:
  using: "composite"
  steps:
    - name: Setup environment
      shell: bash
      run: cat common.env >> $GITHUB_ENV

    - name: Install packages
      shell: bash
      run: |
        apk --no-cache --upgrade add build-base cmake git bash     \
          autoconf boost-static boost-dev flex-dev bison           \
          binutils-dev libevent-dev acl-dev sed                    \
          lz4-dev openssl-dev zlib-dev                             \
          libunwind-dev libdwarf-dev gflags-dev elfutils-dev       \
          libevent-static openssl-libs-static lz4-static xz-dev    \
          zlib-static libunwind-static acl-static tar libffi-dev   \
          gdbm-dev yaml-dev yaml-static ncurses-dev ncurses-static \
          readline-dev readline-static ruby-dev

    - name: Install clang
      shell: bash
      if: ${{ env.CC == 'clang' }}
      run: apk --no-cache --upgrade add clang

    - name: Patch system includes
      shell: bash
      if: ${{ env.CC == 'clang' }}
      run: tools/ci-scripts/patch-system-includes.sh

    - name: Build libjemalloc
      shell: bash
      run: |
        wget -q https://github.com/jemalloc/jemalloc/releases/download/5.2.1/jemalloc-5.2.1.tar.bz2
        tar -xf jemalloc-5.2.1.tar.bz2
        cd jemalloc-5.2.1
        ./configure
        make -j4
        make install

    - name: Install bundler
      shell: bash
      run: gem install bundler -v ${{ env.BUNDLER_VER }}

    - name: Install bundle
      shell: bash
      run: bundle install

    - name: Create deps folder
      shell: bash
      run: mkdir ${{ env.DEPS }}

    - name: Process cache
      id: cache
      uses: actions/cache@v3
      with:
        path: ${{ env.DEPS }}
        key: alpine-${{ env.ALPINE_VER }}-${{ env.CC }}-${{ hashFiles('*.env') }}-v${{ env.CACHE_VER }}

    - name: Cache check
      shell: bash
      if: inputs.cache == 'use' && steps.cache.outputs.cache-hit != 'true'
      run: |
        echo "Failed to upload cache"
        false
