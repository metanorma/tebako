# Copyright (c) 2021-2023 [Ribose Inc](https://www.ribose.com).
# All rights reserved.
# This file is a part of tamatebako
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

name: Alpine

on:
  schedule:
    - cron: "0 8 * * 1"
  push:
    branches: [ main ]
    paths-ignore:
      - 'docs/**'
      - '**.adoc'
      - '**.md'
      - .github/workflows/gem-test-and-release.yml
      - .github/workflows/lint.yml
      - .github/workflows/macos.yml
      - .github/workflows/ubuntu.yml
      - .github/workflows/windows-msys.yml
      - .cirrus.yml
  pull_request:
  workflow_dispatch:

concurrency:
  group: '${{ github.workflow }}-${{ github.job }}-${{ github.head_ref || github.ref_name }}'
  cancel-in-progress: true

env:
  CACHE_VER: 40
  TZ: "Etc/UTC"
  VERBOSE: no

jobs:
  setup:
    name: setup alpine-${{ matrix.env.ALPINE_VER }} CC ${{ matrix.env.CC }}
    runs-on: ubuntu-latest
    container:
      image: alpine:${{ matrix.env.ALPINE_VER }}
    strategy:
      fail-fast: false
      matrix:
        env:
          - { CC: gcc,   CXX: g++,     ALPINE_VER: "3.16" }
          - { CC: clang, CXX: clang++, ALPINE_VER: "3.16" }
    env: ${{ matrix.env }}
    steps:
      - name: Install packages
        run: apk --no-cache --upgrade add git bash

      - name: Checkout tebako packaging environment
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          submodules: true

      - name: Setup ci environment
        uses: ./.github/actions/setup-alpine
        with:
          cache: build

      - name: tebako setup
        run: |
          bundle exec rake generate_version_txt
          exe/tebako setup

  tests-1:
    needs: setup
    name: tests-1 alpine-${{ matrix.env.ALPINE_VER }} Ruby ${{ matrix.package_ruby_ver }} CC ${{ matrix.env.CC }}
    if: ${{ !contains(github.event.head_commit.message, '[cache only]') && !contains(github.event.head_commit.message, '[metanorma only]') }}
    runs-on: ubuntu-latest
    container:
      image: alpine:${{ matrix.env.ALPINE_VER }}
    strategy:
      fail-fast: false
      matrix:
        env:
          - { CC: gcc,   CXX: g++,     ALPINE_VER: "3.16" }
          - { CC: clang, CXX: clang++, ALPINE_VER: "3.16" }
        package_ruby_ver: [ '3.1.4', '3.2.2' ]
    env: ${{ matrix.env }}
    steps:
      - name: Install packages
        run: apk --no-cache --upgrade add git bash

      - name: Checkout tebako packaging environment
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          submodules: true

      - name: Setup ci environment
        uses: ./.github/actions/setup-alpine
        with:
          cache: use

      - name: Checkout shell test framework
        uses: actions/checkout@v3
        with:
          repository: kward/shunit2
          path: tests/shunit2
          fetch-depth: 1

      - name: Run tebako tests (set no. 1)
        run: RUBY_VER=${{ matrix.package_ruby_ver }} tests/scripts/functional-tests.sh

      - name: Strip tebako test packages
        run: strip *-package

      - name: Upload tebako test packages
        if: ${{ matrix.package_ruby_ver == env.RUBY_VER && matrix.env.CC == 'clang' }}
        uses: actions/upload-artifact@v3
        with:
          name: test-packages
          retention-days: 1
          path: |
            test-01-package
            test-11-package
            test-15-package
            test-18-package
            test-19-package

  tests-2:
    needs: setup
    name: tests-2 alpine-${{ matrix.env.ALPINE_VER }} Ruby ${{ matrix.package_ruby_ver }} CC ${{ matrix.env.CC }}
    if: ${{ !contains(github.event.head_commit.message, '[cache only]') && !contains(github.event.head_commit.message, '[metanorma only]') }}
    runs-on: ubuntu-latest
    container:
      image: alpine:${{ matrix.env.ALPINE_VER }}
    strategy:
      fail-fast: false
      matrix:
        env:
          - { CC: gcc,   CXX: g++,     ALPINE_VER: "3.16" }
          - { CC: clang, CXX: clang++, ALPINE_VER: "3.16" }
        package_ruby_ver: [ '3.1.4', '3.2.2' ]
    env: ${{ matrix.env }}
    steps:
      - name: Install packages
        run: apk --no-cache --upgrade add git bash

      - name: Checkout tebako packaging environment
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          submodules: true

      - name: Setup ci environment
        uses: ./.github/actions/setup-alpine
        with:
          cache: use


      - name: Run tebako tests (set no. 2)
        run: RUBY_VER=${{ matrix.package_ruby_ver }} ruby tests-2/tebako-test.rb

  test-on-alpine-latest:
    if: ${{ !contains(github.event.head_commit.message, '[cache only]') && !contains(github.event.head_commit.message, '[metanorma only]') }}
    needs: tests-1
    runs-on: ubuntu-latest
    container:
      image: alpine:latest
    steps:
      - name: Install packages
        run: apk --no-cache --upgrade add git bash

      - name: Checkout tebako packaging environment
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Download test packages
        uses: actions/download-artifact@v3
        with:
          name: test-packages

      - name: Run test packages
        run:  tests/scripts/cross-tests.sh
