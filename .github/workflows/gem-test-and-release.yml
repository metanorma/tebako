# Copyright (c) 2023 [Ribose Inc](https://www.ribose.com).
# All rights reserved.
# This file is a part of tamatebako
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

name: gem-test-and-release

on:
  schedule:
    - cron: "0 6 * * 1"
  push:
    branches: [ main ]
    tags:     [ 'v*' ]
    paths-ignore:
      - 'docs/**'
      - '**.adoc'
      - '**.md'
      - .github/workflows/alpine.yml
      - .github/workflows/lint.yml
      - .github/workflows/macos.yml
      - .github/workflows/ubuntu.yml
      - .github/workflows/windows-msys.yml
      - .cirrus.yml
  pull_request:
  workflow_dispatch:

concurrency:
  group: '${{ github.workflow }}-${{ github.job }}-${{ github.head_ref || github.ref_name }}'
  cancel-in-progress: true

env:
  CACHE_VER: 02
  DEBIAN_FRONTEND: "noninteractive"
  TZ: "Etc/UTC"
# show cmake output
  VERBOSE: no


jobs:
  build-gem:
    name: build-gem
    runs-on: ubuntu-latest
    steps:
    - name: Checkout tebako packaging environment
      uses: actions/checkout@v3
      with:
        fetch-depth: 1
        submodules: true

    - name: Setup environment
      run: cat common.env >> $GITHUB_ENV

    - name: Install Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ env.RUBY_VER }}
        bundler-cache: true

    - name: Build gem
      run: bundle exec rake build

    - name: Upload gem
      uses: actions/upload-artifact@v3
      with:
        name: gem
        retention-days: 1
        path: pkg/*

    - name: Upload actions
      uses: actions/upload-artifact@v3
      with:
        name: actions
        retention-days: 1
        path: .github/actions/*

  package-metanorma-alpine:
    needs: build-gem
    name: Use gem to package metanorma ${{ matrix.os }} Ruby ${{ matrix.package_ruby_ver }} CC ${{ matrix.env.CC }}
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ 'alpine:3.17' ]
        package_ruby_ver: [ '3.1.4' ]
        env:
          - { CC: gcc, CXX: g++ }
    env: ${{ matrix.env }}
    steps:
    - name: Install packages
      run: apk --no-cache --upgrade add bash

    - name: Download actions
      uses: actions/download-artifact@v3
      with:
        name: actions
        path: .github/actions

    - name: Setup ci environment
      uses: ./.github/actions/setup-alpine
      with:
        cache: off

    - name: Package metanorma
      uses: ./.github/actions/test-package-metanorma

  package-metanorma-macos:
    needs: build-gem
    name: Use gem to package metanorma ${{ matrix.os }} Ruby ${{ matrix.package_ruby_ver }} CC ${{ matrix.env.CC }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [  macos-11.0  ]
        package_ruby_ver: [ '3.1.4' ]
        env:
          - { CC: clang, CXX: clang++ }
    env: ${{ matrix.env }}
    steps:
    - name: Download actions
      uses: actions/download-artifact@v3
      with:
        name: actions
        path: .github/actions

    - name: Setup ci environment
      uses: ./.github/actions/setup-macos
      with:
        cache: off
        ruby_version: ${{ matrix.package_ruby_ver }}

    - name: Package metanorma
      uses: ./.github/actions/test-package-metanorma

  package-metanorma-ubuntu:
    needs: build-gem
    name: Use gem to package metanorma ${{ matrix.os }} Ruby ${{ matrix.package_ruby_ver }} CC ${{ matrix.env.CC }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-20.04 ]
        package_ruby_ver: [ '3.1.4' ]
        env:
          - { CC: clang, CXX: clang++ }
    env: ${{ matrix.env }}
    steps:
    - name: Download actions
      uses: actions/download-artifact@v3
      with:
        name: actions
        path: .github/actions

    - name: Setup ci environment
      uses: ./.github/actions/setup-ubuntu
      with:
        cache: off
        ruby_version: ${{ matrix.package_ruby_ver }}

    - name: Package metanorma
      uses: ./.github/actions/test-package-metanorma

# ----- Release -----
  release:
    name: Release gem
    needs: [ package-metanorma-ubuntu, package-metanorma-alpine, package-metanorma-macos ]
    runs-on: ubuntu-latest
    if: contains(github.ref, 'refs/tags/v') && !contains(github.ref, 'pre')
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 1
        submodules: true

    - uses: cadwallion/publish-rubygems-action@master
      env:
        RUBYGEMS_API_KEY: ${{secrets.TEBAKO_CI_RUBYGEMS_API_KEY}}
