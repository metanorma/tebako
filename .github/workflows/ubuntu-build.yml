name: Ubuntu build

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master, issue-13 ]
    paths-ignore:
      - 'docs/**'
      - '**.adoc'
      - '**.md'
  pull_request:
    branches: [ master ]
    paths-ignore:
      - 'docs/**'
      - '**.adoc'
      - '**.md'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
# Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
# The folder for dwarfs and other dependenies
  DEPS: deps
# GitHub dependencies' 
  INCBIN_TAG: 348e36b
  DWARFS_TAG: 78401c3
# Tarball dependencies
  RUBY_VER:   "2.7.4"
  RUBY_HASH:  "3043099089608859fc8cce7f9fdccaa1f53a462457e3838ec3b25a7d609fbc5b"
  BUNDLER_VER: "2.2.3"
  BUNDLER_HASH: "6acefda4aeb34cb3d69aff06affce10424d69f484402a9f7f5577e8c698070db"
  GDBM_VER: "1.13"
  GDBM_HASH: "9d252cbd7d793f7b12bcceaddda98d257c14f4d1890d851c386c37207000a253"
  LIBFFI_VER: "3.2.1"
  LIBFFI_HASH: "980ca30a8d76f963fca722432b1fe5af77d7a4e4d2eac5144fbc5374d4c596609a293440573f4294207e1bdd9fda80ad1e1cafb2ffb543df5a275bc3bd546483"
  NCURSES_VER: "6.2"
  NCURSES_HASH: "30306e0c76e0f9f1f0de987cf1c82a5c21e1ce6568b9227f7da5b71cbea86c9d"
# OpenSSL upgraded from 1.0.0f to 1.0.0h because 1.0.0f requires Perl version less then 3.20
# [ <"glob" is not exported by the File::Glob module> issue ]  
  OPENSSL_VER: "1.1.0h"
  OPENSSL_HASH: "5835626cde9e99656585fc7aaa2302a73a7e1340bf8c14fd635a62c66802a517"
  READLINE_VER: "7.0"
  READLINE_HASH: "750d437185286f40a369e1e4f4764eda932b9459b5ec9a731628393dd3d32334"
  YAML_VER: "0.1.7"
  YAML_HASH: "8088e457264a98ba451a90b8661fcb4f9d6f478f7265d48322a196cec2480729"
  ZLIB_VER: "1.2.11"
  ZLIB_HASH: "c3e5e9fdd5004dcb542feda5ee4f0ff0744628baf8ed2dd5d66f8ca1197cb1a1"

jobs:
  Ubuntu-build:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"

    steps:
    - uses: actions/checkout@v2

    - name: Create deps folder and cache key
      run: |
        mkdir ${{github.workspace}}/${{env.DEPS}}
        echo "Keys" > key.txt
        echo  ${{ env.INCBIN_TAG }} >> key.txt
        echo  ${{ env.DWARFS_TAG }} >> key.txt
        echo  ${{ env.RUBY_HASH }} >> key.txt
        echo  ${{ env.BUNDLER_HASH }} >> key.txt
        echo  ${{ env.GDBM_HASH }} >> key.txt
        echo  ${{ env.LIBFFI_HASH }} >> key.txt
        echo  ${{ env.NCURSES_HASH }} >> key.txt
        echo  ${{ env.OPENSSL_HASH }} >> key.txt
        echo  ${{ env.READLINE_HASH }} >> key.txt
        echo  ${{ env.YAML_HASH }} >> key.txt
        echo  ${{ env.ZLIB_HASH }} >> key.txt


    - name: Clone shell test framework
      run: git clone https://github.com/kward/shunit2.git ${{github.workspace}}/tests/shunit2
      
    - name: Process cache
      uses: actions/cache@v2
      with:
        path: ${{github.workspace}}/${{env.DEPS}}
        key: ${{ github.workflow }}-${{ hashFiles('key.txt') }}-v15

    - name: Install packages Ubuntu
# Already installed: bison flex fuse3 pkg-config
# libsqlite3-dev  is required for Rails packaging tests only
      run: |
        sudo apt-get update
        sudo apt-get install \
        ronn binutils-dev libarchive-dev libevent-dev libjemalloc-dev acl-dev libxml2-dev \
        libdouble-conversion-dev libiberty-dev liblz4-dev liblzma-dev libssl-dev \
        libboost-context-dev libboost-filesystem-dev libboost-program-options-dev \
        libboost-regex-dev libboost-system-dev libboost-thread-dev \
        libunwind-dev libdwarf-dev libelf-dev libfmt-dev libfuse3-dev libgoogle-glog-dev \
        libsqlite3-dev
        
    - name: Create mount point
      run: |
        sudo mkdir -p /home/tebako 
        sudo chmod a+w /home/tebako

    - name: Basic CLI tests
      run: ${{github.workspace}}/tests/test-sh/cli-tests.sh

    - name: tebako setup
      run: ${{github.workspace}}/bin/tebako setup

# Tests
#  01. [Also the baseline] Simple Ruby script, relative path to entry point  
#  02. Simple Ruby script, relative path to entry point, non exisitng entrance      Expected error at configure step
#  03. Simple Ruby script, absolute path to entry point 
#  04. Simple Ruby script, absolute path to entry point, relative path to root      
#  05. Simple Ruby script, absolute path to entry point, not within root            Expected error at configure step
#  06. Rails project                                                                                                       [TODO]
#  07. Rails project, ruby and bundler version mismatch                             Expected error at build step
#  08. Rails project, no entry point                                                Expected error at build step           [TODO]
#  09. Ruby gem (xxx.gem file)  
#  10. Ruby gem (xxx.gem file), no entry point                                      Expected error at build step
#  11. Ruby gem, no gemfile, with gemspec                                             
#  12. Ruby gem, no gemfile, multiple gemspecs                                      Expected error at configure step
#  13. Ruby gem, no gemfile, gemspec error                                          Expected error at build step  
#  14. Ruby gem, no gemfile, gemspec, no entry point                                Expected error at build step  
#  15. Ruby gem, gemfile, gemspec                                             
#  16. Ruby gem, gemfile, gemspec error                                             Expected error at build step  
#  17. Ruby gem, gemfile, gemspec, no entry point                                   Expected error at build step  
#

    - name: Baseline & Test01 - Configure - [Simple Ruby script, relative path to entry point]
      run: | 
        cmake -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}                 \
              -DDEPS:STRING=${{github.workspace}}/${{env.DEPS}}      \
              -DROOT="${{github.workspace}}/tests/test-01" -DENTRANCE="test.rb"           \
              -B ${{github.workspace}}
                                            
    - name: Test01 - Build and install packaged solution - [Simple Ruby script, relative path to entry point]
      run: cmake --build ${{github.workspace}} --config ${{env.BUILD_TYPE}} --target install

    - name: Test01 - Run packaged solution - [Simple Ruby script, relative path to entry point]
      run:  /usr/local/bin/tebako
#        echo Tebako exit code $?

    - name: Test02 - Configure[only] - [Simple Ruby script, relative path to entry point, non exisitng entrance]
      run: | 
        ${{github.workspace}}/tests/scripts/configure_with_failure.sh        \
              ${{env.BUILD_TYPE}} ${{github.workspace}}/${{env.DEPS}}          \
              "${{github.workspace}}/tests/test-01" "test-does-not-exist.rb"    \
              ${{github.workspace}}
              
    - name: Test03 - Configure - [Simple Ruby script, absolute path to entry point]
      run: | 
        cmake -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}                 \
              -DDEPS:STRING=${{github.workspace}}/${{env.DEPS}}      \
              -DROOT="${{github.workspace}}/tests/test-01" -DENTRANCE="${{github.workspace}}/tests/test-01/test.rb"           \
              -B ${{github.workspace}}
                                            
    - name: Test03 - Build and install packaged solution - [Simple Ruby script, absolute path to entry point]
      run: cmake --build ${{github.workspace}} --config ${{env.BUILD_TYPE}} --target install

    - name: Test03 - Run packaged solution - [Simple Ruby script, absolute path to entry point]
      run:  /usr/local/bin/tebako

    - name: Test04 - Configure - [Simple Ruby script, absolute path to entry point, relative path to root ]
      run: | 
        cmake -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}                 \
              -DDEPS:STRING=${{github.workspace}}/${{env.DEPS}}      \
              -DROOT="tests/test-01" -DENTRANCE="test.rb"           \
              -B ${{github.workspace}}
                                            
    - name: Test04 - Build and install packaged solution - [Simple Ruby script, absolute path to entry point, relative path to root ]
      run: cmake --build ${{github.workspace}} --config ${{env.BUILD_TYPE}} --target install

    - name: Test04 - Run packaged solution - [Simple Ruby script, absolute path to entry point, relative path to root ]
      run:  /usr/local/bin/tebako
                                           
    - name: Test05 - Configure[only] - [Simple Ruby script, absolute path to entry point, not within root]
      run: | 
        ${{github.workspace}}/tests/scripts/configure_with_failure.sh       \
              ${{env.BUILD_TYPE}} ${{github.workspace}}/${{env.DEPS}}         \
              "${{github.workspace}}/tests/test-01" "${{github.workspace}}/tests/test-00/test.rb" \
              ${{github.workspace}}

    - name: Test06 - Configure - [Rails project]
      run: | 
        cmake -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}                 \
              -DDEPS:STRING=${{github.workspace}}/${{env.DEPS}}      \
              -DROOT="${{github.workspace}}/tests/test-06" -DENTRANCE="rails"           \
              -B ${{github.workspace}}
    
    - name: Test06 - Build and install packaged solution - [Rails project]
      run: cmake --build ${{github.workspace}} --config ${{env.BUILD_TYPE}} --target install

    - name: Test06 - Run packaged solution - [Rails project]
      run:  /usr/local/bin/tebako

    - name: Test07 - Configure - [Rails project, ruby and bundler version mismatch]
      run: | 
        cmake -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}                 \
              -DDEPS:STRING=${{github.workspace}}/${{env.DEPS}}      \
              -DROOT="${{github.workspace}}/tests/test-07" -DENTRANCE="test.rb"           \
              -B ${{github.workspace}}

    - name: Test07 - Build - [Rails project, ruby and bundler version mismatch]
      run:  ${{github.workspace}}/tests/scripts/build_with_failure.sh ${{github.workspace}} ${{env.BUILD_TYPE}}

    - name: Test08 - Configure - [Rails project, no entry point]
      run: | 
        cmake -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}                 \
              -DDEPS:STRING=${{github.workspace}}/${{env.DEPS}}      \
              -DROOT="${{github.workspace}}/tests/test-06" -DENTRANCE="no-entry-point.sh"           \
              -B ${{github.workspace}}

    - name: Test08 - Build - [Rails project, no entry point]
      run:  ${{github.workspace}}/tests/scripts/build_with_failure.sh ${{github.workspace}} ${{env.BUILD_TYPE}}

    - name: Test09 - Configure - [xxx.gem, no gemspec, no gemfile]
      run: | 
        cmake -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}                 \
              -DDEPS:STRING=${{github.workspace}}/${{env.DEPS}}      \
              -DROOT="${{github.workspace}}/tests/test-09" -DENTRANCE="tebako-test-run.rb"     \
              -B ${{github.workspace}}

    - name: Test09 - Build and install packaged solution - [xxx.gem, no gemspec, no gemfile]
      run: cmake --build ${{github.workspace}} --config ${{env.BUILD_TYPE}} --target install

    - name: Test09 - Run packaged solution - [xxx.gem, no gemspec, no gemfile]
      run:  /usr/local/bin/tebako

    - name: Test10 - Configure - [xxx.gem, no gemspec, no gemfile, entry point does not exist]
      run: | 
        cmake -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}                 \
              -DDEPS:STRING=${{github.workspace}}/${{env.DEPS}}      \
              -DROOT="${{github.workspace}}/tests/test-09" -DENTRANCE="tebako-test-no-entry-point.rb"     \
              -B ${{github.workspace}}

    - name: Test10 - Build - [xxx.gem, no gemspec, no gemfile, entry point does not exist]
      run: ${{github.workspace}}/tests/scripts/build_with_failure.sh ${{github.workspace}} ${{env.BUILD_TYPE}} 

    - name: Test11 - Configure - [Ruby gem, gemspec, no gemfile]
      run: | 
        cmake -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}                 \
              -DDEPS:STRING=${{github.workspace}}/${{env.DEPS}}      \
              -DROOT="${{github.workspace}}/tests/test-11" -DENTRANCE="tebako-test-run.rb"     \
              -B ${{github.workspace}}

    - name: Test11 - Build and install packaged solution - [Ruby gem, no gemfile]
      run: cmake --build ${{github.workspace}} --config ${{env.BUILD_TYPE}} --target install

    - name: Test11 - Run packaged solution - [Ruby gem, no gemfile]
      run:  /usr/local/bin/tebako

    - name: Test12 - Configure[only] - [Ruby gem, multiple gemspecs]
      run: | 
        ${{github.workspace}}/tests/scripts/configure_with_failure.sh       \
              ${{env.BUILD_TYPE}} ${{github.workspace}}/${{env.DEPS}}         \
              "${{github.workspace}}/tests/test-12" "tebako-test-run.rb"      \
              ${{github.workspace}}

    - name: Test13 - Configure - [Ruby gem, no gemfile, gemspec error]
      run: | 
        cmake -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}                 \
              -DDEPS:STRING=${{github.workspace}}/${{env.DEPS}}      \
              -DROOT="${{github.workspace}}/tests/test-13" -DENTRANCE="tebako-test-run.rb"    \
              -B ${{github.workspace}}

    - name: Test13 - Build and install packaged solution - [Ruby gem, no gemfile, gemspec error]
      run:  ${{github.workspace}}/tests/scripts/build_with_failure.sh ${{github.workspace}} ${{env.BUILD_TYPE}}

    - name: Test14 - Configure - [Ruby gem, gemspec, no gemfile, entry point does not exist]
      run: | 
        cmake -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}                 \
              -DDEPS:STRING=${{github.workspace}}/${{env.DEPS}}      \
              -DROOT="${{github.workspace}}/tests/test-11" -DENTRANCE="tebako-test-no-entry-point.rb"     \
              -B ${{github.workspace}}


    - name: Test15 - Configure - [Ruby gem, gemspec, gemfile]
      run: | 
        cmake -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}                 \
              -DDEPS:STRING=${{github.workspace}}/${{env.DEPS}}      \
              -DROOT="${{github.workspace}}/tests/test-15" -DENTRANCE="tebako-test-run.rb"     \
              -B ${{github.workspace}}

    - name: Test15 - Build and install packaged solution - [Ruby gem, gemspec, gemfile]
      run: cmake --build ${{github.workspace}} --config ${{env.BUILD_TYPE}} --target install

    - name: Test15 - Run packaged solution - [Ruby gem, gemspec, gemfile]
      run:  /usr/local/bin/tebako

    - name: Test16 - Configure - [Ruby gem, gemspec, gemfile with error]
      run: | 
        cmake -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}                 \
              -DDEPS:STRING=${{github.workspace}}/${{env.DEPS}}      \
              -DROOT="${{github.workspace}}/tests/test-16" -DENTRANCE="tebako-test-run.rb"     \
              -B ${{github.workspace}}

    - name: Test16 - Build and install packaged solution - [Ruby gem, gemspec, gemfile with error]
      run:  ${{github.workspace}}/tests/scripts/build_with_failure.sh ${{github.workspace}} ${{env.BUILD_TYPE}}

    - name: Test17 - Configure - [Ruby gem, gemspec, gemfile, entry point does not exist]
      run: | 
        cmake -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}                 \
              -DDEPS:STRING=${{github.workspace}}/${{env.DEPS}}      \
              -DROOT="${{github.workspace}}/tests/test-15" -DENTRANCE="tebako-test-run-no-entry.rb"     \
              -B ${{github.workspace}}

    - name: Test17 - Build and install packaged solution - [Ruby gem, gemspec, gemfile, entry point does not exist]
      run: ${{github.workspace}}/tests/scripts/build_with_failure.sh ${{github.workspace}} ${{env.BUILD_TYPE}} 

