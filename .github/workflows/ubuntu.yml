# Copyright (c) 2021-2024 [Ribose Inc](https://www.ribose.com).
# All rights reserved.
# This file is a part of tamatebako
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

name: Ubuntu

on:
  schedule:
    - cron: "0 6 * * 1"
  push:
    branches: [ main ]
    paths-ignore:
      - 'docs/**'
      - '**.adoc'
      - '**.md'
      - .github/workflows/alpine.yml
      - .github/workflows/gem-test-and-release.yml
      - .github/workflows/lint.yml
      - .github/workflows/macos.yml
      - .github/workflows/windows-msys.yml
      - .cirrus.yml
  pull_request:
  workflow_dispatch:

concurrency:
  group: '${{ github.workflow }}-${{ github.job }}-${{ github.head_ref || github.ref_name }}'
  cancel-in-progress: true

env:
  CACHE_VER: 53
  DEBIAN_FRONTEND: "noninteractive"
  TZ: "Etc/UTC"
# show cmake output (yes/no)
  VERBOSE: no


jobs:
  setup:
    name: setup ${{ matrix.os }} [CC ${{ matrix.env.CC }}]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-20.04 ]
        env:
          - { CC: gcc-10,   CXX: g++-10 }
          - { CC: clang-12, CXX: clang++-12 }
    env: ${{ matrix.env }}
    steps:
      - name: Checkout tebako packaging environment
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          submodules: true

      - name: Setup tebako environment
        uses: ./.github/actions/setup-tebako
        with:
          cache: off
          cc: ${{ env.CC }}
          cxx: ${{ env.CXX }}
          install: off

      - name: Setup development environment
        uses: ./.github/actions/setup-tebako-development
        with:
          path: deps
          os: ${{ matrix.os }}
          cc: ${{ env.CC }}
          version: ${{ env.CACHE_VER }}

      - name: tebako setup
        run: ${{ github.workspace }}/exe/tebako setup -D

  tests-1:
    needs: setup
    name: tests-1 ${{ matrix.os }} Ruby ${{ matrix.package_ruby_ver }} CC ${{ matrix.env.CC }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-20.04 ]
        package_ruby_ver: [ '2.7.8', '3.0.7', '3.1.4', '3.1.5', '3.1.6', '3.2.3', '3.2.4' ]
        env:
          - { CC: gcc-10,   CXX: g++-10 }
          - { CC: clang-12, CXX: clang++-12 }
    env: ${{ matrix.env }}
    steps:
      - name: Checkout tebako packaging environment
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          submodules: true

      - name: Setup ci environment
        uses: ./.github/actions/setup-tebako
        with:
          cache: off
          cc: ${{ env.CC }}
          cxx: ${{ env.CXX }}
          install: off

      - name: Setup development environment
        uses: ./.github/actions/setup-tebako-development
        with:
          path: deps
          os: ${{ matrix.os }}
          cc: ${{ env.CC }}
          version: ${{ env.CACHE_VER }}

      - name: Run test set 1
        uses: ./.github/actions/test-set-1

  tests-2:
    needs: setup
    name: tests-2 ${{ matrix.os }} Ruby ${{ matrix.package_ruby_ver }} CC ${{ matrix.env.CC }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-20.04 ]
        package_ruby_ver: [ '2.7.8', '3.0.7', '3.1.4', '3.1.5', '3.1.6', '3.2.3', '3.2.4' ]
        env:
          - { CC: gcc-10,   CXX: g++-10 }
          - { CC: clang-12, CXX: clang++-12 }
    env: ${{ matrix.env }}
    steps:
      - name: Checkout tebako packaging environment
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          submodules: true

      - name: Setup ci environment
        uses: ./.github/actions/setup-tebako
        with:
          cache: off
          cc: ${{ env.CC }}
          cxx: ${{ env.CXX }}
          install: off

      - name: Setup development environment
        uses: ./.github/actions/setup-tebako-development
        with:
          path: deps
          os: ${{ matrix.os }}
          cc: ${{ env.CC }}
          version: ${{ env.CACHE_VER }}

      - name: Run tebako tests (set no. 2)
        run: RUBY_VER=${{ matrix.package_ruby_ver }} ruby ${{github.workspace}}/tests-2/tebako-test.rb

#  test-on-ubuntu-latest:
#    needs: tests-1
#    runs-on: ubuntu-latest
#    steps:
#      - name: Download test packages
#        uses: actions/download-artifact@v4
#        with:
#          name: test-packages
#
#      - name: Run test packages
#        run:  |
#          set -o errexit -o pipefail -o noclobber -o nounset
#          chmod +x test-*-package
#          for TP in test-*-package; do "./$TP"; done
